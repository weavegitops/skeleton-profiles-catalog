
name: Lint and Test Charts

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 3.*

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0


      - name: Add helm dependencies
        shell: bash
        run: |
          for dir in $(ls -d charts/*/ | cut -f2 -d'/'); do
            repo_urls=$(helm dependency list charts/"$dir" | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" || true)
            i=0
            echo $repo_urls | while read urls; do
              for u in $urls; do
                if [ ! -z "$u" ] 
                then
                  echo $u
                  helm repo add $dir$i $u
                  ((i=i+1))
                fi
              done
            done
          done
      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml
  test:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Set up Helm
          uses: azure/setup-helm@v1
          with:
            version: 3.*

        - uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: Set up chart-testing
          uses: helm/chart-testing-action@v2.1.0

        - name: Adding platforms
          run: |
            touch /tmp/platforms
            echo kind >> /tmp/platforms
            echo gke >> /tmp/platforms
            echo mvm >> /tmp/platforms

        - name: Compile and Sort layers alphabetically
          id: compile-and-sort-layers
          run: |
            make -f makefiles/Makefile sort-layers

        - name: Add helm dependencies
          shell: bash
          run: |
            for dir in $(ls -d charts/*/ | cut -f2 -d'/'); do
              repo_urls=$(helm dependency list charts/"$dir" | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" || true)
              i=0
              echo $repo_urls | while read urls; do
                for u in $urls; do
                  if [ ! -z "$u" ] 
                  then
                    echo $u
                    helm repo add $dir$i $u
                    ((i=i+1))
                  fi
                done
              done
            done

        - name: Create kind cluster
          if: steps.compile-and-sort-layers.outputs.kind-ci == 'true'
          uses: helm/kind-action@v1.2.0

        - name: Create wego-system namespace (kind)
          if: steps.compile-and-sort-layers.outputs.kind-ci == 'true' 
          run: kubectl create namespace wego-system

        - name: Test kind platform (kind)
          if: steps.compile-and-sort-layers.outputs.kind-ci == 'true' 
          env:
            INFRASTRUCTURE: "kind"
          run:  make -f makefiles/Makefile test


        - name: Set up Google Cloud SDK
          if: steps.compile-and-sort-layers.outputs.gke-ci == 'true'
          uses: google-github-actions/setup-gcloud@master
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_key: ${{ secrets.GCP_SA_KEY }}
            export_default_credentials: true

        - name: Create gke cluster
          if: steps.compile-and-sort-layers.outputs.gke-ci == 'true'
          shell: bash
          env:
            GKE_CLUSTER_NAME: profiles-${{ github.run_number }}
            INFRASTRUCTURE: "gke"
          run: |
            make -f makefiles/Makefile create-cluster

        - name: Create wego-system namespace (gke)
          if: steps.compile-and-sort-layers.outputs.gke-ci == 'true'
          run: kubectl create namespace wego-system

        - name: Run chart-testing on gke (install)
          if: steps.compile-and-sort-layers.outputs.gke-ci == 'true'
          env:
            INFRASTRUCTURE: "gke"
          run: |
            make -f makefiles/Makefile test

        - name: Delete gke cluster
          if: ${{ always() && steps.compile-and-sort-layers.outputs.gke-ci == 'true' }}
          shell: bash
          env:
            GKE_CLUSTER_NAME: profiles-${{ github.run_number }}
            INFRASTRUCTURE: "gke"
          run: |
            make -f makefiles/Makefile delete-cluster
  test-mvm:
    runs-on: self-hosted
    steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Set up Helm
          uses: azure/setup-helm@v1
          with:
            version: 3.*

        - uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: Set up chart-testing
          uses: helm/chart-testing-action@v2.1.0

        - name: Adding platforms
          run: |
            rm -f /tmp/platforms
            touch /tmp/platforms
            echo mvm >> /tmp/platforms

        - name: Compile and Sort layers alphabetically
          id: compile-and-sort-layers
          env:
            YQ_VERSION: v4.20.2
            YQ_BINARY: yq_linux_amd64
          run: |
            sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo mv kubectl /usr/bin/kubectl
            sudo chmod +x /usr/bin/kubectl
            sudo wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -O /usr/bin/yq
            sudo chmod +x  /usr/bin/yq
            make -f makefiles/Makefile sort-layers

        - name: Add helm dependencies
          shell: bash
          run: |
            for dir in $(ls -d charts/*/ | cut -f2 -d'/'); do
              repo_urls=$(helm dependency list charts/"$dir" | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" || true)
              i=0
              echo $repo_urls | while read urls; do
                for u in $urls; do
                  if [ ! -z "$u" ] 
                  then
                    echo $u
                    helm repo add $dir$i $u
                    ((i=i+1))
                  fi
                done
              done
            done
        - name: Create kubeconfig
          if: steps.compile-and-sort-layers.outputs.mvm-ci == 'true'
          run: |
            mkdir -p ${HOME}/.kube
            echo ${{ secrets.MVM_MGMT_KUBECONFIG }} | base64 --decode > ${HOME}/.kube/config

        - name: Create mvm cluster
          if: steps.compile-and-sort-layers.outputs.mvm-ci == 'true'
          shell: bash
          env:
            MVM_CLUSTER_NAME: profiles-${{ github.run_number }}
            INFRASTRUCTURE: "mvm"
            MVM_MGMT_KUBECONFIG: ${{ secrets.MVM_MGMT_KUBECONFIG }}
            GITHUB_TOKEN: ${{secrets.WEAVEWORKSBOT_PROFILES_CATALOG_RELEASE_TOKEN}}
          run: |
            make -f makefiles/Makefile create-cluster

        - name: Create wego-system namespace (mvm)
          if: steps.compile-and-sort-layers.outputs.mvm-ci == 'true'
          run: kubectl create namespace wego-system

        - name: Run chart-testing on mvm (install)
          if: steps.compile-and-sort-layers.outputs.mvm-ci == 'true'
          env:
            INFRASTRUCTURE: "mvm"
          run: make -f makefiles/Makefile test

        - name: Create kubeconfig
          if: ${{ always() && steps.compile-and-sort-layers.outputs.mvm-ci == 'true' }}
          run: |
            mkdir -p ${HOME}/.kube
            echo ${{ secrets.MVM_MGMT_KUBECONFIG }} | base64 --decode > ${HOME}/.kube/config

        - name: Delete mvm cluster
          if: ${{ always() && steps.compile-and-sort-layers.outputs.mvm-ci == 'true' }}
          shell: bash
          env:
            MVM_CLUSTER_NAME: profiles-${{ github.run_number }}
            INFRASTRUCTURE: "mvm"
          run: |
            make -f makefiles/Makefile delete-cluster